{"version":3,"sources":["My_Practice/Navbar.js","My_Practice/Texform.js","My_Practice/alert.js","App.js","reportWebVitals.js","index.js","My_Practice/NewPrac.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","placeholder","onClick","togledark","htmlFor","Texform","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","margin","heading","value","onChange","e","target","backgroundColor","rows","col","console","log","x","toUpperCase","l","toLowerCase","message","SpeechSynthesisUtterance","window","speechSynthesis","speak","p","document","getElementById","textContent","innerHTML","cancel","prompt","y","replaceAll","m","split","reverse","join","marginTop","filter","element","length","defaultProps","Alert","class","data-bs-dismiss","App","setmode","body","NewPrac","head","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","incre","z","eval","q","add","textAlign","marginLeft"],"mappings":"mMAGe,SAASA,EAAOC,GAK7B,OAGEC,IAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCJ,EAAMK,KAAI,QAAAD,OAAOJ,EAAMK,OAC3EJ,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,KAAGC,UAAU,eAAgBG,KAAK,KAAKN,EAAMO,OAC7CN,IAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1LZ,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cb,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,kBAAmBY,eAAa,OAAOT,KAAK,KAAI,SAE/DL,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,WAAYG,KAAK,KAAMN,EAAMgB,SAG9Cf,IAAAC,cAAA,QAAMC,UAAU,SAASc,KAAK,UAC5BhB,IAAAC,cAAA,SAAOC,UAAU,oBAAoBK,KAAK,SAASU,YAAY,SAASL,aAAW,WACnFZ,IAAAC,cAAA,UAAQC,UAAU,0BAA0BK,KAAK,UAAS,aAKhEP,IAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,SAAbJ,EAAMK,KAAc,QAAQ,SAC3EJ,IAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWS,KAAK,SAASE,QAASnB,EAAMoB,UAAYN,GAAG,2BAChGb,IAAAC,cAAA,SAAOC,UAAU,mBAAmBkB,QAAQ,0BAA0B,WCjCzD,SAASC,EAAQtB,GAE7B,IA0DCuB,EAEoBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA1BI,EAAIF,EAAA,GAACG,EAAOH,EAAA,GAGpB,OAEExB,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,MAAI2B,MAAO,CAACC,MAAmB,SAAb9B,EAAMK,KAAc,QAAQ,QAAQ0B,OAAO,UAAW/B,EAAMgC,SAEtF/B,IAAAC,cAAA,OAAKC,UAAU,QAEbF,IAAAC,cAAA,YAAUC,UAAU,eAAe8B,MAAON,EAAMO,SAhB1B,SAACC,GAErBP,EAAQO,EAAEC,OAAOH,QAcuDnB,GAAG,8BAA8Be,MAAO,CAACQ,gBAA8B,SAAbrC,EAAMK,KAAc,OAAO,QAAQyB,MAAmB,UAAb9B,EAAMK,KAAe,QAAQ,SAAUiC,KAAK,KAAKC,IAAI,OAGpOtC,IAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,4BAA4BgB,QAzE5C,WAEZqB,QAAQC,IAAI,qBACZ,IAAMC,EAAEf,EAAKgB,cACbf,EAAQc,KAqEiE,wBAC7EzC,IAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,4BAA4BgB,QApE3C,WAEbqB,QAAQC,IAAI,oBACZ,IAAMG,EAAEjB,EAAKkB,cACbjB,EAAQgB,KAgEkE,wBAC9E3C,IAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,4BAA4BgB,QA/DzC,WAEfS,EAAQ,MA6DoE,SAChF3B,IAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,4BAA4BgB,QA3D5C,WAEZ,IAAI2B,EAAU,IAAIC,yBAClBD,EAAQnB,KAAKA,EACbqB,OAAOC,gBAAgBC,MAAMJ,GAC7B,IAAIK,EAAEC,SAASC,eAAe,SACX,UAAhBF,EAAEG,YAEDH,EAAEI,UAAU,QAGZJ,EAAEI,UAAU,QACK,UAAdJ,EAAEI,WAELP,OAAOC,gBAAgBO,WA6C8C1C,GAAG,SAAQ,UACxFb,IAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,4BAA4BgB,QA1C/C,WAET,IAAIuB,EAAEe,OAAO,6BACTC,EAAED,OAAO,iCACb7B,EAAQD,EAAKgC,WAAWjB,EAAEgB,MAsC6C,YAC3EzD,IAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,4BAA4BgB,QApC5C,WAEZ,IAEIyC,EAFEjC,EAAKkC,MAAM,KACTC,UACAC,KAAK,KACbnC,EAAQgC,IA+BiE9C,GAAG,MAAM,kBAOhFb,IAAAC,cAAA,MAAI2B,MAAO,CAACmC,UAAU,OAAOlC,MAAmB,SAAb9B,EAAMK,KAAc,QAAQ,UAAU,qBACzEJ,IAAAC,cAAA,KAAG2B,MAAO,CAACC,MAAmB,SAAb9B,EAAMK,KAAc,QAAQ,UAAWsB,EAAKkC,MAAM,KAAKI,OAAO,SAACC,GAAW,OAAuB,GAAhBA,EAAQC,SAAYA,OAAO,cAAYxC,EAAKwC,OAAO,eACrJlE,IAAAC,cAAA,MAAI2B,MAAO,CAACC,MAAmB,SAAb9B,EAAMK,KAAc,QAAQ,UAAU,WACxDJ,IAAAC,cAAA,KAAG2B,MAAO,CAACC,MAAmB,SAAb9B,EAAMK,KAAc,QAAQ,UAAWsB,EAAKwC,OAAO,EAAExC,EAAK,0CDxCjF5B,EAAOqE,aAAa,CAChB7D,MAAM,kCEnDK,SAAS8D,EAAMrE,GAC5B,OACEC,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKoE,MAAM,kDAAkDrD,KAAK,SACjD,QAAZjB,EAAMK,KAAa,oBAAoB,qBAElDJ,IAAAC,cAAA,UAAQM,KAAK,SAAS8D,MAAM,YAAYC,kBAAgB,QAAQ1D,aAAW,YCkC9D2D,MA5Bf,WAAe,IAAAjD,EACWC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAlClB,EAAIoB,EAAA,GAAEgD,EAAOhD,EAAA,GAYpB,OACExB,IAAAC,cAAA,WAEED,IAAAC,cAACH,EAAM,CAACQ,MAAM,MAAMS,MAAM,QAAQX,KAAMA,EAAMe,UAbhC,WACH,UAATf,GACFoE,EAAQ,QACRrB,SAASsB,KAAK7C,MAAMQ,gBAAkB,YAEtCoC,EAAQ,SACRrB,SAASsB,KAAK7C,MAAMQ,gBAAkB,YAStCpC,IAAAC,cAACmE,EAAK,CAAChE,KAAMA,IAEbJ,IAAAC,cAACoB,EAAO,CAACU,QAAQ,mCAAmC3B,KAAMA,IAC1DJ,IAAAC,cAACyE,IAAO,CAACC,KAAK,YAAYvE,KAAMA,MCvBvBwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA7C,EAAA,GAAA8C,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWtC,SAASC,eAAe,SACpDsC,OACH1F,IAAAC,cAACD,IAAM2F,WAAU,KACf3F,IAAAC,cAACsE,EAAG,QAORK,ifCde,SAASF,QAAQ3E,OAC5B,IAAM6F,MAAM,SAANA,QAEFrD,QAAQC,IAAI,oBACZ,IAAIqD,EAAEC,KAAK5C,GACX6C,EAAEF,IAEAG,IAAI,SAAC9D,GAEP6D,EAAE7D,EAAEC,OAAOH,QAEdV,UACUC,oDAAS,GAAEC,WAAAC,0KAAAH,UAAA,GAAhB4B,EAAC1B,WAAA,GAACuE,EAACvE,WAAA,GAEX,OAAQxB,6CAAAC,cAAA,OAAKC,UAAU,aACrBF,6CAAAC,cAAA,MAAI2B,MAAO,CAACC,MAAmB,SAAb9B,MAAMK,KAAc,QAAQ,QAAQ6F,UAAU,WAAalG,MAAM4E,MAG/E3E,6CAAAC,cAAA,SAAO2B,MAAO,CAACQ,gBAA6B,SAAbrC,MAAMK,KAAc,OAAO,SAAUS,GAAG,KAAKmB,MAAOkB,EAAGjB,SAAU+D,MAEpGhG,6CAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,mCAAmC0B,MAAO,CAACsE,WAAW,QAAShF,QAAS0E,OAAQ","file":"static/js/main.17c36b6f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport About from './About'\nexport default function Navbar(props) {\n\n   \n   \n   \n  return (\n    \n    \n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\" >\n    <a className=\"navbar-brand\"  href=\"#\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" >\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\"  aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        <li className=\"nav-item\" >\n          <a className=\"nav-link\"  href=\"#\" >{props.about}</a>\n        </li>\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n       \n      </form>\n    </div>\n  </div>\n  <div className={`form-check form-switch text-${props.mode===\"dark\"?\"light\":\"dark\"}`}>\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.togledark}  id=\"flexSwitchCheckDefault\"/>\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Dark </label>\n</div>\n\n  \n  \n</nav>\n\n\n      \n    \n  )\n}\nNavbar.propTypes={\n    title:PropTypes.string.isRequired,\n    about:PropTypes.string.isRequired\n}\n\nNavbar.defaultProps={\n    title:\"Please prvide title\"\n}","import React,{ useState } from 'react'\n\nexport default function Texform(props) {\n   \n   const Uptext=()=>\n   {\n    console.log(\"Uppertext Clicked\")\n    const x=text.toUpperCase();\n    setText(x);\n   }\n   const lowtext=()=>\n   {\n    console.log(\"LoweCase clicked\")\n    const l=text.toLowerCase();\n    setText(l);\n   }\n   const cleartext=()=>\n   {\n    setText(\"\")\n\n   }\n   const speech=()=>\n   {\n    var message = new SpeechSynthesisUtterance();\n    message.text=text;\n    window.speechSynthesis.speak(message);\n    var p=document.getElementById(\"togel\");\n    if(p.textContent===\"Speak\")\n    {\n        p.innerHTML=\"Stop\";\n    }\n    else{\n        p.innerHTML=\"Speak\";\n        if(p.innerHTML==='Speak')\n        {\n        window.speechSynthesis.cancel();}\n    }\n\n   }\n   const rep=()=>\n   {\n    var x=prompt(\"Enter the text to replcae\");\n    var y=prompt(\"Enter the value in that place\")\n    setText(text.replaceAll(x,y));\n   }\n  \n   const revers=()=>\n   {\n    var c=text.split(\" \");\n    var c=c.reverse();\n    var m=c.join(\" \");\n    setText(m);\n}\n\n\n\n  \n   \n   const handleonchnage=(e)=>\n   {\n    setText(e.target.value);\n\n   }\n\n    const[text,setText]=useState(\"\")\n    \n    \n  return (\n    \n    <div className='container mx-3'>\n        <h2 style={{color:props.mode==='dark'?\"white\":'black',margin:\"35px \"}}>{props.heading}</h2>\n     \n<div className=\"mb-3\">\n  \n  <textarea className=\"form-control\" value={text} onChange={handleonchnage} id=\"exampleFormControlTextarea1\" style={{backgroundColor: props.mode==='dark'?'grey':'white',color:props.mode===\"light\"?\"black\":\"white\"}} rows=\"12\" col=\"4\" ></textarea>\n\n</div>\n<button type=\"button\" className=\"btn btn-primary me-2 my-2\" onClick={Uptext}>Convert to upperCase</button>\n<button type=\"button\" className=\"btn btn-primary me-2 my-2\" onClick={lowtext}>Convert to lowercase</button>\n<button type=\"button\" className=\"btn btn-primary me-2 my-2\" onClick={cleartext}>Clear</button>\n<button type=\"button\" className=\"btn btn-primary me-2 my-2\" onClick={speech} id=\"togel\">Speak </button>\n<button type=\"button\" className=\"btn btn-primary me-2 my-2\" onClick={rep} >Replace </button>\n<button type=\"button\" className=\"btn btn-primary me-2 my-2\" onClick={revers} id=\"to\" >Reverse Words </button>\n\n\n\n\n\n      \n      <h3 style={{marginTop:\"30px\",color:props.mode==='dark'?\"white\":'black'}}>Your text Summary</h3>\n      <p style={{color:props.mode==='dark'?\"white\":'black'}}>{text.split(\" \").filter((element)=>{return element.length!=0}).length} words and {text.length} characters</p>\n      <h3 style={{color:props.mode==='dark'?\"white\":'black'}}>Preview</h3>\n      <p style={{color:props.mode==='dark'?\"white\":'black'}}>{text.length>0?text:\"Enter something in textbox to preview\"}</p>\n\n    </div>\n   \n   \n  )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n  return (\n    <div>\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            {props.mode==\"dark\"?\"Dark Mode enabled\":\"Light mode enabled\"}\n  \n  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n\n  \n</div>\n      \n    </div>\n  )\n}\n","import './App.css';\nimport React, { useState } from 'react';\nimport Navbar from './My_Practice/Navbar';\nimport Texform from './My_Practice/Texform';\nimport NewPrac from './My_Practice/NewPrac';\nimport About from './My_Practice/About';\nimport Alert from './My_Practice/alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const togledark = () => {\n    if (mode === 'light') {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = '#040738';\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n\n  return (\n    <div>\n   \n      <Navbar title=\"App\" about=\"About\" mode={mode} togledark={togledark} />\n\n      <Alert mode={mode} />\n\n      <Texform heading=\"Enter the Text below to Analyse!\" mode={mode} />\n      <NewPrac head=\"Calculate\" mode={mode} />\n      \n      \n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React,{useState} from 'react'\n\nexport default function NewPrac(props) {\n    const incre=()=>\n    {\n        console.log(\"addition clicked\")\n        var z=eval(p)\n        q(z);\n    }\n    const add=(e)=>\n    {\n        q(e.target.value);\n       \n    }\n    const[p,q]=useState(0);\n   \n  return (<div className=\"container\">\n    <h2 style={{color:props.mode==='dark'?\"white\":'black',textAlign:\"center\"}} >{props.head}</h2>\n    \n        \n        <input style={{backgroundColor:props.mode===\"dark\"?\"grey\":\"white\"}} id=\"in\" value={p} onChange={add}/>\n    \n    <button type=\"button\" className=\"btn btn-success me-2 my-2 ml-80 \" style={{marginLeft:\"30px\"}} onClick={incre} >Evaluate</button>\n\n      \n    </div>\n  )\n}\n"],"sourceRoot":""}